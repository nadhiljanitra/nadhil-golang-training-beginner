version: "2.3"
services:
  postgres:
    image: postgres:11.4-alpine
    container_name: golang-training-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payment_code_db
    networks:
      - default
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d payment_code_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate
    networks: 
        - default
    volumes:
        - $PWD/internal/postgres/migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://user:password@postgres:5432/payment_code_db?sslmode=disable", "up"]
    depends_on:
      postgres:
        condition: service_healthy
  server:
    container_name: golang-training-server
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default
    ports:
      - "3000:3000"
  expirecode-cron:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: /app/engine expirecode